scalar DateTime

type User {
    id: String!
    username: String!
    email: String!
    donate: Int!
    mobile: String
    message: String
    anonymous: Boolean
    team: Team
    createdAt: DateTime
    updatedAt: DateTime
}

input DonateInput {
    username: String!
    email: String!
    donate: Int!
    teamId: String
    teamName: String
    mobile: String
    message: String
    anonymous: Boolean
}

input OrderByParams {
    field: String
    direction: String
}

type Query {
    users(orderByInput: OrderByParams): [User]!
    user(id: String!): User
    totalJoin: Result
}

type Mutation {
    donate(donateInput: DonateInput!): User!
}

type Result {
    totalUsers: Int!
    totalDonation: Int!
}

type Subscription {
    totalUpdated: Result
}
